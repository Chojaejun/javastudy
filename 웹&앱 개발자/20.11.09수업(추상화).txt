sc.nextLine( );
문자열을 입력받음.
띄어쓰기 조차도 다 입력으로 인식함.
enter

추상화..
- 추상클래스와 추상메서드를 의미함.

추상메서드:
자식클래스에서 반드시 오버라이딩해야 하는 메서드
abstract 키워드를 넣어주고, { }대신,  ;를 넣는다.

추상클래스:
추상메서드를 갖고 있는 클래스는 반드시 추상클래스를 선언해야 한다.

추상클래스 선언 방법
클래스 헤더에 abstract키워드를 넣어줌.

추상클래스 왜 사용해야 할까? 부모클래스로는 객체를 만들지 않습니다.
이를 시스템적으로 강제하기 위해서 추상클래스 선언...

부모클래스가 갖고 있는 추상메서드를 오버라이딩하기 싫을 경우,
추상클래스를 선언하기도 함.

public void me1( ) {

}

public void me2( ) {

}

public abstract void me3( ) {

}

public void me4( ) {

}

me1( ) ~ me4( ) 중, 자식클래스에서 반드시 오버라이딩해야 하는 메서드는? me3( );

=================================================================
1. 변수에 final  키워드를 붙이면? 
상수가 된다. (상수: 값이 변하지 않는 수)

2. 메서드에 final 키워드가 붙으면? 
자식클래스에서 절대로 오버라이딩하면 안 되는 메서드가 된다.

3. 클래스에 final 키워드를 붙이면? 
자식클래스를 만들 수 없는 클래스가 된다.

me1( ) ~ me4( ) 중, 자식클래스에서 오버라이딩하면 안 되는 메서드는?
public void me1( ) {

}

public void me2( ) {

}

public final void me3( ) {

}

public void me4( ) {

}

object클래스: 자바 최상위 부모클래스

주요 3메서드...
일반적으로 상황에 맞게 이 3개의 메서드를 오버라이딩 해 줌.
상황: 객체 비교를 해야 하는 상황...

1. toString( ): sysout(msg.toString);
2. hashCod( ): 객체가 어디에 저장이 되어 있는지 알려주는 메서드
3. equals( ): 객체 동등비교 기능을 제공하는 메서드

접근제한자(=접근제어지시자)
- public : 프로젝트 어디에서든 접근 가능.
- protected : 같은 패키지에서만 접근 가능. 
단, 상속관계가 성립할 때는 패키지가 달라도 접근할 수 있다. 
- 디폴트 : 같은 패키지에서만 접근 가능.
- private : 같은 클래스에서만 접근 가능.

=========
변수/상수의 사용할 수 있는 접근제한자: public, 디폴트, protected, private
메서드에 사용할 수 있는 접근제한자: public, 디폴트, protected, private
class에 사용할 수 있는 접근제한자: public, 디폴트























