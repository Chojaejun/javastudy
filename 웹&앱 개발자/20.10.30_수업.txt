조건문은 언제 사용하는가?
조건에 따라 달리 구현해야 할 때, 사용함.
~라면, ~이면, ~면

if
- 단순 if: ~하면 ~해라.
if(조건식) {
               실행코드;
}
- if ~ else: ~하면 ~하고, 그렇지 않으면 ~하라.
if(조건식) {
             실행코드;
}else {
             실행코드2;
}
- 다중 if: ~하면 ~하고, 그렇지 않고 ~하면 ~하고, 그렇지 않고 ~하면 ~하고, 그렇지 않으면 ~해라.
if(조건식) {
             실행코드;
}else if {
             실행코드2;
}else {
          모든 조건에 맞지 않을 때의 실행코드
}

return의 용도
- 값 반환 return 3; return a;
- 메서드 실행 종료: return;

switch ~ case
- ==, equals( )
- 사용할 수 있는 자료형이 제한: int, String, enum
- break 키워드를 잘 이용해야 함.
- 변수 넣는 자리에서 연산을 할 수 있다는 것
- if 와 switch 둘 다 사용할 수 있을 때는 switch를 우선적으로 사용


메서드에서 반복되는 값은 -> 변수
클래스에서 반복되는 코드 -> 메서드
프로젝트에서 반복되는 자원(메서드,상수,변수) -> 상속

for문
for(int i = 0; i<20; i++) {

         sysout("hello world")

}

소수[소:쑤]: 1과 자기자신 외에는 약수가 없는 수
2,3,5,7,11,13,17,19,23,29,31,37,41,43,47....

print( ): 출력
println( ): 출력하고 줄바꿈
