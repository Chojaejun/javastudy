1. String 클래스의 객체 생성 두 가지 방법 학습
 - 명시적 객체 생성법 Vs 암시적 객체 생성법

2. 두 생성법의 차이점
 - 객체 생성 메모리 위치가 다름

3. 참조자료형에서는 ==(동일성 비교 연산자)를 사용하지 않음.
 대신 equals( )(동등성 비교 메서드)을 사용함.

4. 동일성 비교는 데이터와 그 저장 위치까지 확인함.
 동등성 비교는 데이터만 확인함.

5. String 클래스의 불변적 성격으로 메모리 낭비가 발생하고 성능 저하가 발생
 이를 보환하기 위해서 StringBuffer 클래스를 사용함.

6. StringBuffer는 활용도가 떨어지므로 마지막에 toString( )을 호출하여
 활용도가 높은 String 클래스로 전환해준다.

 **활용도? 파라미터의 자료형이나 반환형의 자료형으로 이용되는 정도**


















































