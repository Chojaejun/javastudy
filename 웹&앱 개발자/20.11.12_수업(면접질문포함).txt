면접 볼 때
1. 예외 처리 잘 하세요?
  -(면접관 생각 : try ~ catch만 하지?)
- try ~ catch와 throws를 구분해서 사용할 수 있고,
예외가 발생하든 그렇지 않든 반드시 실행할 코드가 있으면
finally구문에 작성할 수 있고,
강제로 예외를 발생시키기 위해 throw를 사용할 수 있으며,
그에 따른 사용자 정의 예외 클래스도 작성할 수 있습니다.
(이어진 질문: 강제로 예외 발생?)
- 문법적으로는 이상이 없는데, 논리적으로 이상이 있을 때(ex: 개새끼를 입력할 때 욕설금지)

2. 예외 메시지 읽을 줄 아세요?
- (예외가 발생했을 때, 넘겨주는 메시지를 보고 조치할 수 있으세요?)
- 예외 발생 원인과 예외 발생 위치도 알려주죠... 제가 조치할 수 있는 내용이면 
곧 바로 조치하고 모르는 내용이면 구글에서 검색하여 조치를 취해왔습니다.


예외: 프로그래머가 조치할 수 있는 이상 현상. 사용자의 입력값이 논리적으로 맞지 않거나
문법적으로 맞지 않는 상황
에러: 프로그래머가 조치할 수 없는 이상 현상, jvm, 단전
===============
Throwable: 예외와 에러의 최상위 부모클래스
===============
Exception: 예외의 최상위 부모클래스
===============
자바는 예외도 클래스로 관리하고 있음.
throw --> 문법적으로는 이상이 없지만, 논리적으로는 이상이 있는 경우.
사용자 정의 예외 클래스...
Exception(실행 중 발생하지 않도록 조치), RuntimeExcoption(실행 중 예외 발생)

try ~ catch : 예외가 발생했을 때, 어떻게 조치해야 하는지 알고 있을 때.
요구사항 명세서에 조치사항이 적혀 있을 때
(이해 쉽게 하기/혼자만 기억하기: 예외가 발생해서 조치한 내용에 대해 책임질 수 있으면)

throws : 예외가 발생했을 때, 어떻게 조치해야 하는지 모르고 있을 때.
요구사항 명세서에 조치사항이 적혀 있지 않을 때
(이해 쉽게 하기/혼자만 기억하기: 예외가 발생해서 조치한 내용에 대해 책임질 수 없으면)
====================
finally: 예외가 있든 없든 반드시 실행해야 하는 코드 구문..
         return보다 강력하다.

====================

roll( )
해당 필드의 값만 변경이 되고,
다른 필드의 값은 변경이 안 됨. 단, date - day는 연동됨.
